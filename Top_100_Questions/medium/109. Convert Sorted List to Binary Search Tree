//C++:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        int size = length(head);
        
        head_ = head;
        
        return helper(0,size-1);
        
    }
private:
    ListNode* head_;
    
    int length(ListNode* node)
    {
        int len = 0;
        while (node)
        {
            len++;
            node = node->next;
        }
        
        return len;
    }
    
    
    TreeNode* helper(int l, int r)
    {
        if(l>r) return nullptr;
        
        int mid = (l+r)/2;
        
        auto left = helper(l,mid-1);
        
        TreeNode* node = new TreeNode(head_->val);
        head_ = head_->next;
        
        node->left = left;        
        node->right = helper(mid+1,r);
        
        return node;
        
    }
    
    
    
};

// TC: O(n)
// SC: O(logn)
