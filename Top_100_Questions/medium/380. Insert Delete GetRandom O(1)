//C++:
class RandomizedSet {
public:
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(mp.find(val) != mp.end())    return false;
        else
        {
            l.push_back(val);
            mp[val] = l.size() - 1;
            return true;
        }
    }
    
    bool remove(int val) {
        if(mp.find(val) == mp.end())    return false;
        else
        {
            int last = l.back();
            l[mp[val]] = last;
            l.pop_back();
            mp[last] = mp[val];
            mp.erase(val);
            return true;
        }
    }
    
    int getRandom() {
        return l[rand()%l.size()];
    }
    
private:
    vector<int> l;
    unordered_map<int,int> mp;
    
    
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
 
// TC: O(n)
// SC: O(n)
