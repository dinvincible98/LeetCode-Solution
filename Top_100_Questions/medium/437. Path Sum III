//C++:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pathSum(TreeNode* root, int targetSum) {
        int cnt = 0;
        
        dfs(root,0,targetSum,cnt);
        
        return cnt;
    }
    
private:
    unordered_map<int,int> mp;
    
    void dfs(TreeNode* root,int currSum, int targetSum, int &cnt)
    {
        if(!root)   return;
        
        currSum += root->val;
        
        if(currSum == targetSum)    cnt++;
        
        cnt +=  mp[currSum - targetSum];
        
        mp[currSum]++;
        
        dfs(root->left,currSum,targetSum,cnt);
        dfs(root->right,currSum,targetSum,cnt);
        
        mp[currSum]--;
        
    }
};
// TC: O(n)
// SC: O(n)
