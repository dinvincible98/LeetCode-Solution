//C++:
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0, right = nums.size()-1;
        
        while (left<=right)
        {
            int mid = (left+right) / 2;
            
            if(nums[mid] == target) return mid;
            
            // rotation in left array
            if (nums[mid] > nums[right])
            {
                if(target<nums[mid] && target>=nums[left])  right = mid-1;
                else    left = mid+1;    
            }
            else if (nums[mid] < nums[left])        // in right array
            {
                if(target > nums[mid] && target<=nums[right])   left = mid+1;
                else right = mid-1;
            }
            else
            {
                // no rotation
                if(target<nums[mid])    right = mid-1;
                else left = mid+1;
            }
        }
        
        return -1;
    }
};

// TC: O(logn)
// SC: O(1)
