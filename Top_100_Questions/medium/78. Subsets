//C++:
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> path;
        backtrack(res,path,nums,0);
        
        return res;
    }
    
private:
    void backtrack(vector<vector<int>> &res, vector<int> &path,vector<int> &nums, int idx)
    {
        if(idx == nums.size())
        {
            res.push_back(path);
            return;
        }
        backtrack(res,path,nums,idx+1);
        path.push_back(nums[idx]);
        backtrack(res,path,nums,idx+1);
        path.pop_back();
    }
};

// TC: O(N*2^N)
// SC: O(N)
