//C++:
class Solution {
public:
    vector<int> findOrder(int n, vector<vector<int>>& p) {
        vector<int> re_classes(n, 0);               // number of classes required to take idx class
        vector<vector<int>> graph(n,vector<int>());    
        vector<int> res;
        
        for (auto& v:p)
        {
            graph[v[1]].push_back(v[0]);
            re_classes[v[0]]++;
        }
        
        queue<int> q;
        
        for (int i=0;i<re_classes.size();++i)
        {
            if(re_classes[i]==0)    q.push(i);
        }
        
        while (!q.empty())
        {
            int x = q.front();
            q.pop();
            res.push_back(x);
            
            for (auto& v:graph[x])
            {
                re_classes[v]--;
                if(re_classes[v]==0)    q.push(v);
            }
        }
        
        if (res.size()==n)  return res;
        
        
        return {};        
    }
};

// TC: O(V+E)
// SC: O(V+E)
