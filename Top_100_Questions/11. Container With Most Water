C++:
class Solution {
public:
    int maxArea(vector<int>& height) {
        int max_area = 0;
        int left = 0, right = height.size()-1;
        while (left<right)
        {
            int h = min(height[left],height[right]);
            max_area = max(max_area,h*(right-left));
            while(height[left]<=h && left<right)    left++;
            while(height[right]<=h && left<right)   right--;            
        }
        return max_area;
    }
};

Python:

class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        max_area = 0
        left = 0
        right = len(height)-1
        
        while left < right:
            h = min(height[left],height[right])
            max_area = max(max_area, h*(right-left))
            while height[left]<=h and left<right:   left+=1
            while height[right]<=h and left<right:  right-=1
        return max_area
            
