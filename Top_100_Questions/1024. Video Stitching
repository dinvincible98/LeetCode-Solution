//C++:
class Solution {
public:
    int videoStitching(vector<vector<int>>& clips, int time) {
        sort(clips.begin(),clips.end());

        int cur_time = 0;
        int cnt = 0;
        int i = 0;
        int max_num = 0;
        int n = clips.size();
        
        while(i<n && cur_time<time)
        {
            if (clips[i][0]>cur_time)   return -1;
            
            while(i<n && clips[i][0]<=cur_time)
            {
                max_num = max(max_num,clips[i][1]);
                ++i;
            }
            cur_time = max_num;
            ++cnt;
        }
        
        return cur_time>=time? cnt:-1;
        
    }
};

//Python:

class Solution(object):
    def videoStitching(self, clips, time):
        """
        :type clips: List[List[int]]
        :type time: int
        :rtype: int
        """
        
        clips.sort()
        
        n = len(clips)
        cur_time = 0
        i = 0
        max_num = 0
        cnt = 0
        
        
        while i<n and cur_time<time:
            if clips[i][0]>cur_time:    return -1
        
            while i<n and clips[i][0]<=cur_time:
                max_num = max(max_num,clips[i][1])
                i += 1
            cur_time = max_num
            cnt += 1
        
        return cnt if cur_time>=time else -1
            
