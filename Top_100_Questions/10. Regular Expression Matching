//C++:
class Solution {
public:
    bool isMatch(string s, string p) {
        int n = s.size();
        int m = p.size();
        
        vector<vector<bool>> res(n+1, vector<bool> (m+1,false));
        res[0][0] = true;
        
        for (int i=1;i<n+1;++i) res[i][0] = false;
        for (int j=1;j<m+1;++j) res[0][j] = j>1 && p[j-1]=='*' && res[0][j-2];
        
        for (int i=1;i<n+1;++i)
        {
            for (int j=1;j<m+1;++j)
            {
                if (p[j-1] != '*')  res[i][j] = res[i-1][j-1] && (s[i-1]==p[j-1] || p[j-1]=='.');
                else    res[i][j] = res[i][j-2] || (s[i-1]==p[j-2] || p[j-2]=='.') && res[i-1][j];
            }
        }
        
        return res[n][m];
    }
};

//Python:

class Solution(object):
    def isMatch(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: bool
        """
        
        n = len(s)
        m = len(p)
        
        res = [[False for i in range(m+1)] for j in range(n+1)]
        res[0][0] = True
        
        for i in range(1,n+1):  res[i][0] = False
        
        for j in range(1,m+1):  res[0][j] = j>1 and p[j-1]=='*' and res[0][j-2]
        
        for i in range(1,n+1):
            for j in range(1,m+1):
                if p[j-1] != '*':   res[i][j] = res[i-1][j-1] and (s[i-1]==p[j-1] or p[j-1]=='.')        
                else:   res[i][j] = res[i][j-2] or (s[i-1]==p[j-2] or p[j-2]=='.') and res[i-1][j]
        
        
        return res[n][m]
                    
