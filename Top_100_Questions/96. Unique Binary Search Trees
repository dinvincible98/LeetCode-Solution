//C++:
class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n+1,0);
        dp[0] = 1;
        
        for (int i=1;i<=n;++i)
        {
            for (int j=0;j<i;++j)
            {
                dp[i] += (dp[j]*dp[i-j-1]);
            }
        }
        return dp[n];
    }
};

//Python:
class Solution(object):
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """
        dp = [0]*(n+1)
        dp[0] = 1
        
        for i in range(1,n+1):
            for j in range(i):
                dp[i] += (dp[j] * dp[i-j-1])
        return dp[n]
