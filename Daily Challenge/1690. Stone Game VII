//C++:
class Solution {
public:
    int stoneGameVII(vector<int>& stones) {
        int n = stones.size();
        
        vector<int> sum(n+1,0);
        
        for (int i=0;i<n;++i)   sum[i+1] = sum[i] + stones[i];
        
        
        vector<vector<int>> dp(n,vector<int> (n,0));
        for (int len=2;len<=n;++len)
        {
            for(int i=0;i<=n-len;++i)
            {
                int j = i + len - 1;
                dp[i][j] = max(sum[j+1]-sum[i+1]-dp[i+1][j],sum[j]-sum[i]-dp[i][j-1]);
            }
        }
        return dp[0][n-1];
    }
};

//Python:

class Solution(object):
    def stoneGameVII(self, stones):
        """
        :type stones: List[int]
        :rtype: int
        """
        
        n = len(stones)
        Sum = [0] * (n+1)
        for i in range(n):  Sum[i+1] = Sum[i]+stones[i]
        dp = [[0 for i in range(n)] for j in range(n)]
        
        for k in range(2,n+1):
            for i in range(n-k+1):
                j = i + k - 1
                dp[i][j] = max(Sum[j+1]-Sum[i+1]-dp[i+1][j], Sum[j]-Sum[i]-dp[i][j-1])
        
        return dp[0][n-1]
