//C++:

class Solution {
public:
    int candy(vector<int>& ratings) {
        int n = ratings.size();
        
        if (n<=1)   return n;
        
        vector<int> res(n,1);
        
        for (int i=1;i<n;++i)
        {
            if (ratings[i]>ratings[i-1]) res[i] = res[i-1]+1;
        }
        
        for (int i=n-1;i>0;--i)
        {
            if(ratings[i-1] > ratings[i])   res[i-1] = max(res[i]+1,res[i-1]);
        }
        
        int ans = accumulate(res.begin(),res.end(),0);
        
        return ans;
        
    }
};

//Python:
class Solution(object):
    def candy(self, ratings):
        """
        :type ratings: List[int]
        :rtype: int
        """
        
        n = len(ratings)
        
        if (n<=1):   return n
    
        res = [1] * n
        
        for i in range(1,n):
            if ratings[i]>ratings[i-1]:
                res[i] = res[i-1]+1
    
        
        for i in range(n-1,0,-1):
            if (ratings[i-1]>ratings[i]):
                res[i-1] = max(res[i]+1,res[i-1])
        
        ans = sum(res)
        
        return ans
        



