//C++:

class Solution {
public:
    int numSubarrayBoundedMax(vector<int>& nums, int left, int right) {
        int res = 0;
        int l = -1, r = -1;
        int n = nums.size();
        
        for (int i=0;i<n;++i)
        {
            if(nums[i]>right)   l = i;
            if(nums[i]>=left)   r = i;
            res += r-l;
        }
        return res;
    }
};

//Python:
class Solution(object):
    def numSubarrayBoundedMax(self, nums, left, right):
        """
        :type nums: List[int]
        :type left: int
        :type right: int
        :rtype: int
        """
        n = len(nums)
        l, r = -1, -1
        res = 0
        
        for i in range(n):
            if nums[i]>right:   l=i
            if nums[i]>=left:   r=i
            res += r-l
        
        return res

