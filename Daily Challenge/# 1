1. Two Sum

C++:

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> mp;
        for (int i=0;i<nums.size();++i){
            int diff = target - nums[i];
            if (mp.count(diff)) return {mp[diff],i};
            else    mp[nums[i]]=i;
        }
        return {};
    }
};


Python:

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        mapping = {}
        for i in range(len(nums)):
            diff = target-nums[i]
            if diff in mapping:
                return [mapping[diff],i]
            else:
                mapping[nums[i]]=i
