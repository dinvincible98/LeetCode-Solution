//C++:
class Solution {
public:
    int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
        sort(boxTypes.begin(),boxTypes.end(),
             [](vector<int> const& a, vector<int> const& b)
             {
                 return a[1]>b[1];
             });
        
        int res = 0;
        for (auto& vec:boxTypes)
        {
            if (truckSize>vec[0])
            {
                truckSize -= vec[0];
                res += vec[0]*vec[1];
            }
            else
            {
                res += truckSize*vec[1];
                return res;
            }
        }
        
        return res;
    }
};

Python:
class Solution(object):
    def maximumUnits(self, boxTypes, truckSize):
        """
        :type boxTypes: List[List[int]]
        :type truckSize: int
        :rtype: int
        """
        boxTypes.sort(key=lambda x:-x[1])
        res = 0
        for box, units in boxTypes:
            if truckSize>box:
                truckSize-=box
                res += box*units
            else:
                res += truckSize*units
                return res
        return res


