//C++:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        vector<vector<int>> res;
        
        if (!root)  return res;
        
        map<int,vector<int>> mp;
        
        queue<pair<int, TreeNode*>> q;
        q.push(make_pair(0,root));
        
        while (!q.empty())
        {
            for (int i=0;i<q.size();++i)
            {
                TreeNode *node = q.front().second;
                int temp = q.front().first;
                q.pop();
                
                mp[temp].push_back(node->val);
                
                if (node->left) q.push(make_pair(temp-1,node->left));  
                if (node->right) q.push(make_pair(temp+1,node->right));
             
            }
        }
        
        for (auto& it:mp)
        {
            res.push_back(it.second);
        }
        
        return res;
        
    }
};
