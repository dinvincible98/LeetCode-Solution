//C++:

/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;

    Node() {}

    Node(int _val) {
        val = _val;
        next = NULL;
    }

    Node(int _val, Node* _next) {
        val = _val;
        next = _next;
    }
};
*/

class Solution {
public:
    Node* insert(Node* head, int insertVal) {
        if (!head)
        {
            Node *new_node = new Node();
            new_node->val = insertVal;
            new_node->next = new_node;
            return new_node;
            
        }
            
        Node *prev = head;
        Node *next = head->next; 

        
        while (!(prev->val<=insertVal && insertVal<=next->val) && 
               !(prev->val>next->val && insertVal<next->val) &&
               !(prev->val>next->val && insertVal>prev->val))
        {
            prev = prev->next;
            next = next->next;
            
            if (prev==head) break;
        }
        
        prev->next = new Node(insertVal,next);
        
        return head;
    }
};
