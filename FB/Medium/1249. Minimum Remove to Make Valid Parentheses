//C++:

class Solution {
public:
    string minRemoveToMakeValid(string s) {
        stack<int> stk;
        
        for (int i=0;i<s.size();++i)
        {
            if (s[i] == '(')    stk.push(i);
            else if (s[i] == ')')
            {
                if (stk.empty())    s[i] = '*';
                else    stk.pop();
            }
        }
        
        while (!stk.empty())
        {
            s[stk.top()] = '*';
            stk.pop();
        }
        
        string res;
        for (auto& ch:s)
        {
            if (ch != '*')  res+=ch;
        }
        
        return res;
            
    }
};




class Solution {
public:
    string minRemoveToMakeValid(string s) {
        int cnt = 0;
        for (int i=0;i<s.size();++i)
        {
            if(s[i] == '(') cnt++;
            else if (s[i]==')')
            {
                if(cnt==0)  s[i] = '*';
                else    cnt--;
            }
        }
        
        cnt = 0;
        for (int i=s.size()-1;i>=0;--i)
        {
            if(s[i]==')')   cnt++;
            else if (s[i]=='(')
            {
                if(cnt==0)  s[i] = '*';
                else    cnt--;
            }
        }
        
        
        s.erase(remove(s.begin(),s.end(),'*'),s.end());
        
        return s;
        
        
        
        
    }
};

// TC: O(N)
// SC: O(1)
