//C++:

class Solution {
public:
    vector<int> findOrder(int n, vector<vector<int>>& p) {
        vector<int> res;
        
        vector<int> indegree(n,0);              // number of required classes to take idx class
        
        vector<vector<int>> graph(n,vector<int>());
        
        for(auto &v:p)
        {
            graph[v[1]].push_back(v[0]);
            indegree[v[0]]++;
        }
        
        queue<int> q;
        
        for(int i=0;i<n;++i)
        {
            if(indegree[i] == 0)    q.push(i);
        }
        
        while (!q.empty())
        {
            int x = q.front();
            q.pop();
            res.push_back(x);
            
            for(auto& v:graph[x])
            {
                indegree[v]--;
                
                if(indegree[v] == 0)    q.push(v);
            }
                
        }
        
        if(res.size() == n) return res;
        
        return {};
        
    }
};


// TC: O(V+E)
// SC: O(V+E)
