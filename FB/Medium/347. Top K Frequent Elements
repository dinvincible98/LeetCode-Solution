//C++:

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        priority_queue<pair<int,int>> pq;
        
        
        for (auto &n:nums) mp[n]++;
        
        for (auto &it:mp)   pq.push(make_pair(it.second,it.first));
        
        vector<int> res;
        
        for (int i=0;i<k;++i)
        {
            auto top = pq.top();
            pq.pop();
            res.push_back(top.second);    
        }
        
        return res;
        
    }
};
