//C++:

/**
 * // This is the BinaryMatrix's API interface.
 * // You should not implement it, or speculate about its implementation
 * class BinaryMatrix {
 *   public:
 *     int get(int row, int col);
 *     vector<int> dimensions();
 * };
 */

class Solution {
public:
    int leftMostColumnWithOne(BinaryMatrix &binaryMatrix) {
        vector<int> dim = binaryMatrix.dimensions();
        int m = dim[0] , n = dim[1];
        
        int left = 0, right = n - 1;
        
        int res = -1;
        
        while (left <= right)
        {
            int mid = left + (right - left) / 2;
            if(existOne(binaryMatrix, m, mid))
            {
                res = mid;
                right = mid - 1;
            }
            else    left = mid + 1;
        }
        
        
        return res;
    }
private:
    
    bool existOne(BinaryMatrix &mat, int r, int c)
    {
        for (int i=0;i<r;++i)
        {
            if(mat.get(i,c) == 1)   return true;
        }
        
        return false;
    }
};

// TC: O(M*logN)
// SC: O(1)
