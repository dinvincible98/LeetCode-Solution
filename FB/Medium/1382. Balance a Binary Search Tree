//C++:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* balanceBST(TreeNode* root) {
        inorder(root);
        return sortedArr2BST(0,sorted_list.size()-1);    
    }
    
private:
    void inorder(TreeNode *root)
    {
        if(!root)   return;
        inorder(root->left);
        sorted_list.push_back(root);
        inorder(root->right);
        
    }
    
    TreeNode* sortedArr2BST(int start, int end)
    {
        if (start > end) return nullptr;
        int mid = (start+end) / 2;
        TreeNode* node = sorted_list[mid];
        node->left = sortedArr2BST(start,mid-1);
        node->right = sortedArr2BST(mid+1,end);
        return node;
    }
    
    
    vector<TreeNode *> sorted_list;

};
