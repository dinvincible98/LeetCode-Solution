// c++

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int l = 0;
        helper(root,l);
        
        return l;
    }

private:
    
    int helper(TreeNode * node, int &l)
    {
        if (!node)  return 0;
        
        int left_l = helper(node->left,l);
        int right_l = helper(node->right,l);
        
        l = max(l, left_l+right_l);
        
        return max(left_l, right_l)+1;
        
        
    }
};
