//C++:
class UndergroundSystem {
public:
    UndergroundSystem() {
        
    }
    
    void checkIn(int id, string stationName, int t) {
        mp1[id] = make_pair(stationName,t);
    }
    
    void checkOut(int id, string stationName, int t) {
        auto &[start, t1] = mp1[id];
        auto &[total_duration, cnt] = mp2[start+">"+stationName];
        
        total_duration += t-t1;
        cnt++;
        
    }
    
    double getAverageTime(string startStation, string endStation) {
        auto [duration, cnt] = mp2[startStation+">"+endStation];
        
        return (double)duration/cnt;
    }
    
private:
    unordered_map<int,pair<string,int>> mp1; // <id,<stationName,time>>
    unordered_map<string,pair<int,int>> mp2;    // <route,<total_duration, trip_cnt>>
    
};

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem* obj = new UndergroundSystem();
 * obj->checkIn(id,stationName,t);
 * obj->checkOut(id,stationName,t);
 * double param_3 = obj->getAverageTime(startStation,endStation);
 */

// TC: O(1)
// SC: O(p+s^2) p is number of passgener and s is num of stations
