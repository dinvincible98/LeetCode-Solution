//C++:
class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int left = 0, right = nums.size()-1;
        
        while (left <= right)
        {
            int mid = (left+right) / 2;
            if(nums[mid] == target) return true;
            
            if(nums[left]==nums[mid] && nums[right]==nums[mid])
            {
                left++;
                right--;
            }
            else if(nums[mid] > nums[right])    // rotated in left
            {
                if(target >= nums[left] && target<nums[mid])    right = mid-1;
                else left = mid+1;
            }
            else                               // rotate in right
            {
                if(target>nums[mid] && target<=nums[right]) left = mid+1;
                else    right = mid-1;
            }
        }
        
        return false;
        
    }
};

// TC: O(logn)
// SC: O(1)
