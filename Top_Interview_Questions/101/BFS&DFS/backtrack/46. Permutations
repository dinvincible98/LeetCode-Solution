//C++:
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> path;
        backtrack(res,path,nums);
        
        return res;
        
    }
private:
    void backtrack(vector<vector<int>>& res, vector<int>& path, vector<int>& nums)
    {
        
        if(path.size() == nums.size())
        {
            res.push_back(path);
            return;
        }
        
        for (auto& n:nums)
        {
            if(find(path.begin(),path.end(),n) != path.end())   continue;
            path.push_back(n);
            backtrack(res,path,nums);
            path.pop_back();
        }
        
    }
};

// TC: O(n!)
// SC: O(n)
