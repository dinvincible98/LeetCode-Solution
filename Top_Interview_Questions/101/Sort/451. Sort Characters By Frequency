//C++:
class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char,int> mp; // <char, times>
    
        for (auto& c:s)
        {
            mp[c]++;
        }
        
        
        priority_queue<pair<int,char>>   pq;
        
        for (auto& it:mp)
        {
            pq.push({it.second,it.first});
        }
        
        
        string res = "";
        while (!pq.empty())
        {
            auto [times, c] = pq.top();
            pq.pop();
            
            while (times--)
            {
                res += c;
            }
        }
        
        return res;
    }
};

// TC: O(nlogn)
// SC: O(n)
