//C++:
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        
        for (auto& n:nums)  mp[n]++;
        
        priority_queue<pair<int,int>> pq;
        
        for (auto& it:mp)   pq.push({it.second, it.first});
        
        vector<int> res;
        while (k--)
        {
            auto x = pq.top();
            pq.pop();
            res.push_back(x.second);
        }
        
        
        return res;
    }
};

// TC: O(nlogk)
// SC: O(n+k)
