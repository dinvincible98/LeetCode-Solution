//C++:
class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.empty())  return 0;
        int m = matrix.size(), n =  matrix[0].size();
        vector<int> dp(n+1,0);
        int max_len = 0, prev = 0;
        
        for (int i=1;i<=m;++i)
        {
            for (int j=1;j<=n;++j)
            {
                int temp = dp[j];
                if (matrix[i-1][j-1] == '1')
                {
                    dp[j] = min(min(dp[j-1],prev),dp[j])+1;
                    max_len = max(max_len,dp[j]);
                }
                else    dp[j] = 0;
                prev = temp;
            }
        }
        
        return max_len*max_len;
    }
};

// TC: O(m*n)
// SC: O(n)
