//C++:
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int,vector<int>,greater<int>> pq;    //min-heap
        
        for (auto& n:nums)
        {
            if(pq.size() == k)
            {
                auto top = pq.top();
                if (n > top)
                {
                    pq.pop();
                    pq.push(n);
                }
            }
            else    pq.push(n);
        }
        
        return pq.top();
    }
};

// TC: O(nlogk)
// SC: O(k)
