//C++:
class Solution {
public:
    void solve(vector<vector<char>>& board) {
        if(board.empty())   return;
        const int m = board.size();
        const int n = board[0].size();
        
        for (int i=0;i<m;++i)
        {
            for (int j=0;j<n;++j)
            {
                if((board[i][j]=='O') && (i==0 || j==0 || i==m-1 || j==n-1))    // all egdes
                {
                    dfs(board,m,n,i,j);
                }
            }
        }
        
        for (int i=0;i<m;++i)
        {
            for (int j=0;j<n;++j)
            {
                if(board[i][j]=='O')    board[i][j] = 'X';
                if(board[i][j]=='*')    board[i][j] = 'O';
            }
        }
    }
    
private:
    void dfs(vector<vector<char>>& board,int m,int n, int i, int j)
    {
        if(i<0 || j<0 || i>=m || j>=n)  return;
        
        if (board[i][j] == 'O')
        {
            board[i][j] = '*';
            dfs(board,m,n,i+1,j);
            dfs(board,m,n,i-1,j);
            dfs(board,m,n,i,j+1);
            dfs(board,m,n,i,j-1);
        }
        
    }
};
// TC: O(mn)
// SC: O(mn)
