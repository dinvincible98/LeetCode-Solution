//C++:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        return dfs(root,LONG_MIN,LONG_MAX);
    }
    
private: 
    bool dfs(TreeNode* root, long Min, long Max)
    {
        if(!root)   return true;
        
        if(root->val>Min && root->val<Max)
        {
            bool cond1 = dfs(root->left,Min,root->val);
            bool cond2 = dfs(root->right,root->val,Max);
            
            return cond1&&cond2;
        }
        
        return false;
    }
};
// TC: O(n)
// SC: O(n)
