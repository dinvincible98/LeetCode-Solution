//C++:
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head)   return nullptr;
        
        Node* temp = head;
        
        while (temp)
        {
            Node* new_node = new Node(temp->val);
            new_node->next = temp->next;
            temp->next = new_node;
            temp = new_node->next;
        }
        
        temp = head;
        while (temp)
        {
            temp->next->random = temp->random? temp->random->next:nullptr;
            temp = temp->next->next;
        }
        
        temp = head;
        Node* dummy = new Node(0), *iter=dummy, *front;
        
        while(temp)
        {
            front = temp->next->next;
            iter->next = temp->next;
            temp->next = front;
            
            iter = iter->next;
            temp = temp->next;
        }
        
        return dummy->next;
        
        
        
            
    }
};

// TC: O(n)
// SC: O(1)
