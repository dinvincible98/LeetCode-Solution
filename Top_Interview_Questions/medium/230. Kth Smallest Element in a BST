//C++:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        int cnt = 0, res;
        inorder(root,k,cnt,res);
        return res;
    }
private:
    void inorder(TreeNode* root,int k, int &cnt, int &res)
    {
        if(!root)   return;
        inorder(root->left,k,cnt,res);
        
        cnt++;
        if(cnt == k)
        {
            res = root->val;
            return;
        }
        else if (cnt > k)   return; // if k=0
        
        inorder(root->right,k,cnt,res);
    }
};
// TC: O(k)
// SC: O(1)
