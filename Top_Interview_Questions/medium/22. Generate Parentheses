//C++:
class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        helper(res,"",n,n);
        return res;
    }
    
private:
    void helper(vector<string> &res,string s, int left ,int right)
    {
        if (left==0 && right==0)
        {
            res.push_back(s);
            return;
        }
        
        if (left>0) dfs(res,s+'(',left-1,right);
        if (right>left)    dfs(res,s+')',left,right-1);
    }
};

// TC: O(2^n)
// SC: 
