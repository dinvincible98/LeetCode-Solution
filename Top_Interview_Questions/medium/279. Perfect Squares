//C++:
class Solution {
public:
    int numSquares(int n) {
        unordered_set<int> visited;
        queue<int> q;
        q.push(0);
        
        int cnt = 1;
        while (!q.empty())
        {
            int sz = q.size();
            while(sz--)
            {
                auto src = q.front();
                q.pop();
                
                for (int i=1;i*i<=n;++i)
                {
                    int sum = src + i*i;
                    if(sum == n)    return cnt;
                    if(!visited.count(sum) && sum<n)
                    {
                        visited.insert(sum);
                        q.push(sum);
                    }
                }
                
            }
            cnt++;
        }
        
        return -1;
        
        
    }
};
// TC: O(1)
// SC: O(1)
