//C++:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root)   return vector<vector<int>> ();
        
        queue<TreeNode*> q;
        q.push(root);
        
        bool left_to_right = true; 
        
        vector<vector<int>> res;
        
        while(!q.empty())
        {
            int sz = q.size();
            
            vector<int> l(sz,0);
            for (int i=0;i<sz;++i)
            {
                auto node = q.front();
                q.pop();
                
                int idx = left_to_right? i:sz-1-i;
                l[idx] = node->val;
                
                if(node->left)    q.push(node->left);
                if(node->right)   q.push(node->right);
            }
            res.push_back(l);
            
            left_to_right = !left_to_right;            
        }
        
        return res;
    }
};

// TC: O(n)
// SC: O(n)
