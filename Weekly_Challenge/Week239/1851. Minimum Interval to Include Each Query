
C++:
class Solution {
public:
    vector<int> minInterval(vector<vector<int>>& intervals, vector<int>& queries) {
        priority_queue<vector<int>> pq;
        unordered_map<int,int> mp;
        vector<int> Q = queries;
        vector<int> res;
        int i = 0, n=intervals.size();
        
        sort(Q.begin(),Q.end());
        sort(intervals.begin(),intervals.end());
        
        for(auto& q:Q)
        {
            while(i<n && intervals[i][0]<=q)
            {
                int left=intervals[i][0], right = intervals[i][1];
                pq.push({left-right-1,right});
                ++i;
            }
            
            while(!pq.empty() && pq.top()[1]<q)   pq.pop();
            
            mp[q] = !pq.empty()? -pq.top()[0]:-1;
        }
        
        for (auto& q:queries)
        {
            res.push_back(mp[q]);
        }
        return res;
    }
};
