C++:
class Solution {
public:
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int low = 1, high = 1e7+1;
        int n = dist.size();
        while (low<high)
        {
            int mid = (low+high)/2;
            double total = 0;
            for (int i=0;i<n-1;++i)
            {
                double t = ceil(double(dist[i])/double(mid));
                total += t;
            }
            total += double(dist[n-1])/mid;
            if (total<=hour) high = mid;
            else    low = mid+1; 
                
        }
        if (low==1e7+1) return -1;
        return low;
    }
    
};
