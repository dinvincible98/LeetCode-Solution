647. Palindromic Substrings

C++:
class Solution {
public:
    int countSubstrings(string s) {
        for(int i=0;i<s.size();++i)
        {
            extendStr(s,i,i);
            extendStr(s,i,i+1);
        }
        return count;
    }

private:
    void extendStr(string s, int start, int end)
    {
        while(start>=0 && end<s.size() && s[start]==s[end])
        {
            start--;
            end++;
            count++;
        }
    }

    int count = 0;

};

Python:

class Solution(object):
    def countSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
        self.count = 0
        
        for i in range(len(s)):
            self.extendSub(s,i,i)
            self.extendSub(s,i,i+1)
        return self.count
                       
        
    
    
    def extendSub(self,s,start,end):
        while(start>=0 and end<len(s) and s[start]==s[end]):
            start-=1
            end+=1
            self.count+=1
        
        
