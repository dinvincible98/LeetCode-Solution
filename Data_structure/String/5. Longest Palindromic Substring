5. Longest Palindromic Substring

C++:
class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.size();
        bool dp[n][n];
        memset(dp, 0, sizeof(dp));
        
        for (int i=0;i<n;++i)
        {
            dp[i][i] = true;
        }
        
        int start = 0, max_len = 1;
        for (int i=0;i<n;++i)
        {
            if(s[i]==s[i+1])
            {
                dp[i][i+1] = true;
                start = i;
                max_len = 2; 
            }
        }
        
        // string greater than 2
        for (int i=3;i<=n;++i)
        {
            
            for (int j=0;j<n-i+1;++j)
            {
                // end index
                int k = j+i-1;
                if(dp[j+1][k-1] && s[j]==s[k])
                {
                    dp[j][k] = true;
                    
                    if(i>max_len)
                    {
                        start = j;
                        max_len = i;
                    }
                }
            }
            
        }
        return s.substr(start,max_len);
    }
};

Python:

