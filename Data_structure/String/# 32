32. Longest Valid Parentheses
C++:
class Solution {
public:
    int longestValidParentheses(string s) {
        int n = s.size();
        
        stack<int> stk;
        int max_len = 0;
        
        for (int i=0;i<n;++i)
        {
            if(!stk.empty() && s[stk.top()]=='(' && s[i]==')')
            {
                stk.pop();
                max_len = stk.empty()? max(max_len,i+1):max(max_len,i-stk.top());         
            }
            else
            {
                stk.push(i);
            }
        }
        return max_len;
    }
};

Python:
class Solution(object):
    def longestValidParentheses(self, s):
        """
        :type s: str
        :rtype: int
        """
        stack = []
        max_len = 0
        for i in range(len(s)):
            if len(stack)!=0 and s[stack[-1]]=='(' and s[i]==')':
                stack.pop()
                max_len = max(max_len,i+1) if len(stack)==0 else max(max_len,i-stack[-1])
            else:
                stack.append(i)
        return max_len
        
        
        
