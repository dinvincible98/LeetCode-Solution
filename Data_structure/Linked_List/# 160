160. Intersection of Two Linked Lists

C++:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *L1 = headA, *L2 = headB;
        while(L1 != L2)
        {
            L1 = L1==NULL? headB:L1->next;
            L2 = L2==NULL? headA:L2->next; 
        }
        return L1;
        
        
    }
};

Python:

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        L1 = headA
        L2 = headB
        
        
        while L1!=L2:
            L1 = L1.next if L1 else headB
            L2 = L2.next if L2 else headA
        return L1
        
