240. Search a 2D Matrix II
C++:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size(), n = matrix[0].size();
        int i=0, j=n-1;
        while(i<m && j>=0)
        {
            if(matrix[i][j]==target)    return true;
            else if(matrix[i][j]<target)    i++;
            else    j--;
        }
        return false;
    }
};

Python:
class Solution(object):
    def searchMatrix(self, matrix, target):
        """
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """
        m, n = len(matrix), len(matrix[0])
        i = 0
        j = n-1
        while (i<m and j>=0):
            if matrix[i][j] == target:
                return True
            elif matrix[i][j] < target:
                i+=1
            else:
                j-=1
        return False

        
        
        
