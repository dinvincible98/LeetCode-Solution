378. Kth Smallest Element in a Sorted Matrix
C++:
class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int m = matrix.size(), n = matrix[0].size();
        int low = matrix[0][0];
        int high = matrix[m-1][n-1];
                
        while(low<=high)
        {
            int mid = low + (high-low)/2;
            int cnt = 0;
            for (int i=0;i<m;++i)
            {
                for(int j=0;j<n && matrix[i][j]<=mid;j++)
                {
                    cnt++;
                }
            
            }
            if(cnt<k)    low=mid+1;
            else    high = mid-1;
        }
        return low;
    }
};

Python:
class Solution(object):
    def kthSmallest(self, matrix, k):
        """
        :type matrix: List[List[int]]
        :type k: int
        :rtype: int
        """
        m = len(matrix)
        n = len(matrix[0])
        low = matrix[0][0]
        high = matrix[-1][-1]
        
        while low<=high:
            mid = low + (high-low)/2
            cnt = 0
            for i in range(m):
                for j in range(n):
                    if(matrix[i][j]<=mid):
                        cnt+=1
            if cnt<k:   low = mid+1
            else:   high = mid-1
        return low

        
        
        
