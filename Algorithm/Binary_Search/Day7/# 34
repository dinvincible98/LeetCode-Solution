34. Find First and Last Position of Element in Sorted Array

C++:

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        if (nums.size()==0) return {-1,-1};
        int left = 0, right = nums.size()-1;
        while(left < right){
            int mid = (left+right)/2;
            if (nums[mid] >= target)    right = mid;
            else    left = mid+1;
        }
        if (nums[left] != target)   return {-1,-1};
        int temp = left;
        left = 0, right = nums.size()-1;
        while(left < right){
            int mid = (left+right+1)/2;
            if (nums[mid] > target)    right = mid-1;
            else    left = mid;
        }
        return {temp,left};
    }
};

Python:

class Solution(object):
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        if len(nums)==0:
            return [-1,-1]
        left = 0
        right = len(nums)-1
        while left<right:
            mid = (left+right)/2
            if nums[mid]>=target:
                right = mid
            else:
                left = mid+1
        if nums[left]!=target:
            return [-1,-1]
        start = left
        left = 0
        right = len(nums)-1
        while left<right:
            mid = (left+right+1)/2
            if nums[mid]<=target:
                left = mid
            else:
                right = mid-1
        return [start,left]
        
                
