72. Edit Distance

C++:

class Solution {
public:
    int minDistance(string word1, string word2) {
        int m = word1.size(), n = word2.size();
        vector<vector<int>> dp(m+1, vector<int>(n+1,0));
        for (int i=0;i<m+1;++i){
            dp[i][0] = i; 
        }
        for (int j=0;j<n+1;++j){
            dp[0][j] = j;
        }
        for (int i=1;i<m+1;++i){
            for (int j=1;j<n+1;++j){
                int temp1 = min(dp[i-1][j]+1, dp[i][j-1]+1);
                int temp2 = dp[i-1][j-1]+(word1[i-1] != word2[j-1]);
                dp[i][j] = min(temp1,temp2);
            }
        }
        return dp[m][n];
    }
};
           
Python:

class Solution(object):
    def minDistance(self, word1, word2):
        """
        :type word1: str
        :type word2: str
        :rtype: int
        """
        m, n = len(word1), len(word2)
        dp = [[0] * (n+1) for _ in range(m+1)]
        for i in range(n+1):
            dp[0][i]=i
        for i in range(m+1):
            dp[i][0]=i
        for i in range(1,m+1):
            for j in range(1,n+1):
                dp[i][j] = min(dp[i-1][j]+1, dp[i][j-1]+1, dp[i-1][j-1]+(word1[i-1] != word2[j-1]))
        return dp[-1][-1]
        
        
