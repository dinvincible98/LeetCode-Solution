376. Wiggle Subsequence

C++:

class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        if (nums.size()==0) return 0;
        int up = 1, down = 1;
        for (int i=1;i<nums.size();++i){
            if (nums[i]>nums[i-1])  up = down + 1;
            if (nums[i]<nums[i-1])  down = up + 1;
        }
        return max(up,down);
    }
};

Python:

class Solution(object):
    def wiggleMaxLength(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        n = len(nums)
        if n<2: return n
        up, down = [1 for i in range(n)], [1 for i in range(n)]
        for i in range(1,n):
            for j in range(i):
                if nums[i]>nums[j]:
                    up[i]= max(up[i],down[j]+1)
                elif nums[i]<nums[j]:
                    down[i] = max(down[i],up[j]+1)
        return max(max(up),max(down))
