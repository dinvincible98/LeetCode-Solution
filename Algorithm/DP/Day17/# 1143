1143. Longest Common Subsequence

C++:

class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
        int m = text1.size(), n = text2.size();
        vector<vector<int>> dp(m+1, vector<int>(n+1,0));
        for (int i=0;i<m+1;++i){
            for (int j=0;j<n+1;++j){
                if (i==0 || j==0)   dp[i][j] = 0;
                else if (text1[i-1] == text2[j-1])  dp[i][j] = dp[i-1][j-1]+1;
                else    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
        return dp[m][n];
    }
};

Python:

class Solution(object):
    def longestCommonSubsequence(self, text1, text2):
        """
        :type text1: str
        :type text2: str
        :rtype: int
        """
        m, n = len(text1), len(text2)
        dp = [[0]*(n+1) for i in range (m+1)]
        for i in range (m+1):
            for j in range(n+1):
                if i==0 or j==0:
                    dp[i][j] = 0
                elif text1[i-1] == text2[j-1]:
                    dp[i][j] = dp[i-1][j-1]+1
                else:
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])
        return dp[-1][-1]
