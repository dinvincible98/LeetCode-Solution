279. Perfect Squares

C++:

class Solution {
public:
    int numSquares(int n) {
        unordered_set<int> visited;
        queue<int> q;
        q.push(0);
        visited.insert(0);
        int res = 1;
        
        while(!q.empty()){
            int size = q.size(); 
            while(size--){
                int src = q.front();
                q.pop();
                for (int i=1;i*i<=n;++i){
                    int dest = src+i*i;
                    if (dest==n)    return res;
                    if (dest<n && !visited.count(dest)){
                        q.push(dest);
                        visited.insert(dest);
                    }
                }
            }
            res++;
        }
        return -1;
    }
};

Python:

class Solution(object):
    def numSquares(self, n):
        """
        :type n: int
        :rtype: int
        """
        q = deque()
        q.append((n,0))
        visited = {n}
        while q:
            num, step = q.popleft()
            for i in range(1,num+1):
                rem = num-i*i
                if rem < 0:
                    break
                if rem == 0:
                    return step+1
                if rem not in visited:
                    q.append((rem,step+1))
                    visited.add(rem)
