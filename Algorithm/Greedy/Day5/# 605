605. Can Place Flowers

C++:

class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int count = 0;
        for (int i= 0;i<flowerbed.size();++i){
            if(flowerbed[i]==0 && ((i-1<0 || flowerbed[i-1]==0) && (i+1>=flowerbed.size() || flowerbed[i+1]==0))){
                count++;
                flowerbed[i] = 1;
            }
        }
        return count >= n;
    }
};

Python:

class Solution(object):
    def canPlaceFlowers(self, flowerbed, n):
        """
        :type flowerbed: List[int]
        :type n: int
        :rtype: bool
        """
        if not n:   return True
        j = 0
        for i, k in enumerate (flowerbed):
            if k == 1:
                j = i+2
                continue
            else:
                if(i==j) and (i==len(flowerbed)-1 or flowerbed[i+1]==0):
                    n-=1
                    j+=2
                    if not n:   return True
        return False 
