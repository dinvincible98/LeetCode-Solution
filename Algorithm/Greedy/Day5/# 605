605. Can Place Flowers

C++:

class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int count = 0;
        for (int i= 0;i<flowerbed.size();++i){
            if(flowerbed[i]==0 && ((i-1<0 || flowerbed[i-1]==0) && (i+1>=flowerbed.size() || flowerbed[i+1]==0))){
                count++;
                flowerbed[i] = 1;
            }
        }
        return count >= n;
    }
};

Python:

class Solution(object):
    def canPlaceFlowers(self, flowerbed, n):
        """
        :type flowerbed: List[int]
        :type n: int
        :rtype: bool
        """
        count = 0
        for i in range(len(flowerbed)):
            if flowerbed[i]==0 and (i-1<0 or flowerbed[i-1]==0) and (i+1>=len(flowerbed) or flowerbed[i+1]==0):
                count+=1
                flowerbed[i]=1
        return count>=n
