462. Minimum Moves to Equal Array Elements II

C++:
class Solution {
public:
    int minMoves2(vector<int>& nums) {
        std::sort(nums.begin(),nums.end());
        // int n= nums.size()/2;
        // int step = 0;
        // for (unsigned int i=0;i<nums.size();++i)
        // {
        //     if (nums[i] == nums[n]) continue;
        //     step += abs(nums[n]-nums[i]);
        // }
        // return step;
        
        int left = 0, right = nums.size()-1;
        int step = 0; 
        while(left<right)
        {
            step += nums[right--] - nums[left++];
            // left++;
            // right--;
        }
        return step;
        
    }
};


Python:
                   
class Solution(object):
    def minMoves2(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums.sort()
        left = 0
        right = len(nums)-1
        step = 0
        while(left<right):        
            step += nums[right]-nums[left]
            right-=1
            left+=1
        
        return step;
