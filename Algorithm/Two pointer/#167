# 167.Two Sum II - Input array is sorted

C++ :
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
	int i = 0 , j = numbers.size() -1;
	while (i < j){
		int sum = numbers[i] + numbers[j];
		if (sum == target){
			return {i+1, j+1};
	    }
		else if (sum < target){
			i++;
		}
		else{
			j--;
		}
    }
	return {};
  }
};


Python: 
Sol #1(dictionary):
class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        temp = {}
        for i, num in enumerate(numbers):
			temp[num] = i
        for i, num in enumerate(numbers):
			remainder = target - num
			if remainder in temp and temp[remainder] > i:
				return [i+1, temp[remainder]+1]
Sol #2:
class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        i, j = 0, len(numbers) - 1
        
        while i < j:
            Sum = numbers[i] + numbers[j]
            if Sum > target:
                j -= 1
            elif Sum < target:
                i += 1
            else:
                return [i + 1, j + 1] 
C:
int* twoSum(int* numbers, int numbersSize, int target, int* returnSize){
    int * ans = (int*)malloc(sizeof(int)*2);
    *returnSize = 2;
    int i = 0, j = numbersSize-1;
    while(i < j)
    {
        if(numbers[i] + numbers[j] == target)
        {
            ans[0] = i+1;
            ans[1] = j+1;
            return ans;
        }
        else if(numbers[i] + numbers[j] > target)
        {
            j--;
        }
        else
        {
            i++;
        }
    }
    return NULL;
}

