279. Perfect Squares

C++:

class Solution {
public:
    int numSquares(int n) {
        unordered_set<int> visited;
        queue<int> q;
        q.push(0);
        visited.insert(0);
        int dist = 1;
        
        while(!q.empty()){
            int size = q.size();
            while(size--){
                int src = q.front();
                q.pop();
                for (int i=1;i*i<=n;++i){
                    int dest = src + i*i;
                    if (dest==n)    return dist;
                    if (dest<n && !visited.count(dest)){
                        q.push(dest);
                        visited.insert(dest);
                    }
                }  
            }
            dist++;
        }
        return -1;    
    }
};


Python:

class Solution(object):

    def numSquares(self, n):
        """
        :type n: int
        :rtype: int
        """
        queue = deque([(n,0)])
        visited = {n}
        while queue:
            num, step = queue.popleft()
            for i in range(1, num+1):
                rem = num - i*i
                if rem < 0:
                    break
                if rem == 0:
                    return step+1
                if rem not in visited:
                    queue.append((rem,step+1))
                    visited.add(rem)
